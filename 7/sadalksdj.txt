#include <stdio.h>
#include <stdlib.h>
 
#define N 6
#define STACK_SIZE 100
 
 
int G[N][N] =
{
    {0, 1, 1, 1, 1, 0},
    {1, 0, 0, 1, 0, 0},
    {1, 0, 0, 1, 1, 1},
    {1, 1, 1, 0, 0, 1},
    {1, 0, 1, 0, 0, 0},
    {0, 0, 1, 1, 0, 0}
};
 
int k;
int Stack[STACK_SIZE];
 
void Search(int v)
{
    int i;
    for(i = 0; i < N; i++)
        if(G[v][i])
        {
            G[v][i] = G[i][v] = 0;
            Search(i);
        }
    Stack[++k] = v;
}
 
 
 
int main()
{
    int T, p, q, s;
    int j, vv;
 
    T = 1;
    for(p = 0; p < N; p++)
    {
        s = 0;
        for(q = 0; q < N; q++)
        {
            s += G[p][q];
        }
        if(s%2) T = 0;
    }
    k = -1;
    printf("start vertex: "); scanf("%d", &vv);
    if(T)
    {
        Search (vv);
        for(j = 0; j <= k; j++)
            printf("%d ", Stack[j]);
    }
    else
        printf("not Eulerian graph\n");
    return 0;
}